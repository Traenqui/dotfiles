# History
 
Set-PSReadLineOption -PredictionSource History
Set-PSReadLineOption -PredictionViewStyle ListView
Set-PSReadLineOption -EditMode Windows
 
# Alias
 
Set-Alias -Name code -Value code-insiders
 
function .. {
    cd ..
}
 
function .... {
    cd ../../
}
 
function ...... {
    cd ../../../
}
 
function oss {
    cd "~/dev/oss/$args"
}
 
function work {
    cd "~/dev/work/$args"
}
 
# Git
 
function gb {
    git checkout -b $args
}
 
function gbt ([string] $taskid) {
    git checkout -b "task/$taskid"
}
 
function gs {
    git checkout $args
    git pull
}
 
function gmaster {
    gs 'master'
}
 
function gmain {
    gs 'main'
}
 
function gdev {
    gs 'develop'
}
 
function grb {
    git fetch
    git rebase origin/$args
}
 
function gco {
    git add .
    git commit -m $args
}
 
function gfeat {
    if($null -eq $args[1]) {
        gco "feat: $($args[0])"
    }else {
        gco "feat($($args[0])): $($args[1])"
    }
}
 
function gfix {
    if($null -eq $args[1]) {
        gco "fix: $($args[0])"
    }else {
        gco "fix($($args[0])): $($args[1])"
    }
}
 
function gtest {
    if($null -eq $args[1]) {
        gco "test: $($args[0])"
    }else {
        gco "test($($args[0])): $($args[1])"
    }
}
 
function gdocs {
    if($null -eq $args[1]) {
        gco "docs: $($args[0])"
    }else {
        gco "docs($($args[0])): $($args[1])"
    }
}
 
function gstyle {
    if($null -eq $args[1]) {
        gco "style: $($args[0])"
    }else {
        gco "style($($args[0])): $($args[1])"
    }
}
 
function grefactor {
    if($null -eq $args[1]) {
        gco "refactor: $($args[0])"
    }else {
        gco "refactor($($args[0])): $($args[1])"
    }
}
 
function gperf {
    if($null -eq $args[1]) {
        gco "perf: $($args[0])"
    }else {
        gco "perf($($args[0])): $($args[1])"
    }
}
 
function gchore {
    if($null -eq $args[1]) {
        gco "chore: $($args[0])"
    }else {
        gco "chore($($args[0])): $($args[1])"
    }
}
 
function gpu {
    git pull
}
 
function goops {
    git add .
    git commit --amend --no-edit
}
 
function gfp {
    git push --force-with-lease
}
 
function gr {
    git reset --hard
    git clean -f -d
}
 
# Macros